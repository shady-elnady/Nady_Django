# Generated by Django 3.2.16 on 2022-12-18 19:04

import GraphQL.models.methods
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Specimen', '0001_initial'),
        ('Product', '0001_initial'),
        ('Facility', '0003_publicfacility_owner'),
        ('Analytic', '0002_initial'),
        ('Kat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analyzer',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Product.product')),
                ('analyzer_type', models.CharField(choices=[('HematolgyAnalyzer', 'Hematolgyanalyzer'), ('ElectrolyteAnalyzer', 'Electrolyteanalyzer'), ('UrineAnalyzer', 'Urineanalyzer'), ('ChemistryAnalyzer', 'Chemistryanalyzer')], max_length=20, verbose_name='Analyzer Type')),
                ('brochu_url', models.FileField(blank=True, null=True, upload_to=GraphQL.models.methods.upload_to, verbose_name='Brouchu URL')),
                ('test_volume', models.FloatField(default=400, verbose_name='Test Volume')),
                ('is_closed_system', models.BooleanField(default=False, verbose_name='is Closed System')),
                ('analytical_technique', models.ManyToManyField(related_name='Analyzers', to='Kat.AnalyticalTechnique', verbose_name='Analytical Technique')),
            ],
            options={
                'verbose_name': 'Analyzer',
                'verbose_name_plural': 'Analyzers',
            },
            bases=('Product.product',),
        ),
        migrations.CreateModel(
            name='LabSupply',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Product.product')),
            ],
            options={
                'verbose_name': 'Laboratory Supply',
                'verbose_name_plural': 'Laboratory Supplies',
            },
            bases=('Product.product',),
        ),
        migrations.CreateModel(
            name='AntiBioticDisk',
            fields=[
                ('labsupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Kat.labsupply')),
                ('symbol', models.CharField(max_length=10, unique=True, verbose_name='Symbol')),
                ('for_child_pregnant', models.BooleanField(default=True, verbose_name='for Child /    gna   nt')),
            ],
            options={
                'verbose_name': 'Anti-Biotic Disk',
                'verbose_name_plural': 'Anti-Biotic Disks',
            },
            bases=('Kat.labsupply',),
        ),
        migrations.CreateModel(
            name='Kat',
            fields=[
                ('labsupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Kat.labsupply')),
                ('low_sensitivity', models.FloatField(blank=True, null=True, verbose_name='Low Sensitivity')),
                ('high_sensitivity', models.FloatField(blank=True, null=True, verbose_name='High Sensitivity')),
            ],
            options={
                'verbose_name': 'Kat',
                'verbose_name_plural': 'Kats',
            },
            bases=('Kat.labsupply',),
        ),
        migrations.CreateModel(
            name='KatSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_range', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Kat_Samples', to='Analytic.referencerange', verbose_name='Reference Range')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Kats', to='Specimen.sample', verbose_name='Specimen')),
            ],
            options={
                'verbose_name': 'Kat Sample',
                'verbose_name_plural': 'Kat Samples',
            },
        ),
        migrations.CreateModel(
            name='AnalyzerKat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_up_consumption', models.FloatField(blank=True, null=True, verbose_name='Start Up Consumption')),
                ('test_consumption', models.FloatField(blank=True, null=True, verbose_name='Test Consumption')),
                ('end_consumption', models.FloatField(blank=True, null=True, verbose_name='End Consumption')),
                ('analyzer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kat.analyzer', verbose_name='Analyzer')),
            ],
            options={
                'verbose_name': 'Analyzer Kat',
                'verbose_name_plural': 'Analyzer Kats',
            },
        ),
        migrations.AddField(
            model_name='analyticaltechnique',
            name='departement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Analytical_Techniques', to='Facility.departement', verbose_name='Departement'),
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('labsupply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Kat.labsupply')),
                ('concentration', models.FloatField(verbose_name='Concentration')),
                ('analytics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Standards', to='Analytic.analytics', verbose_name='Analytics')),
            ],
            options={
                'verbose_name': 'Standard',
                'verbose_name_plural': 'Standards',
            },
            bases=('Kat.labsupply',),
        ),
    ]
